The WHERE clause always requires a predicate, which is a condition that evaluates to true, false or unknown.
The percent sign is called a wildcard character.
A wildcard character is used to substitute other characters. 

# Sorting Results Sets
*ORDER BY
*ORDER BY DESC
*ORDER BY 2

#grouping result sets
*eliminate duplicates- DISTINCT clause
db2=> select distinct(country) from Author
*group by
db2=> select distinct(country) from Author GROUP BY Country
db2= select country,count(country) AS COUNT FROM Author GROUP BY Country
*Having clause
db2= select country,count(country) AS COUNT FROM Author GROUP BY Country HAVING coUNT(Country)>4

Exercise 1: String Patterns

Retrieve all employees whose address is in Elgin,IL.
SELECT F_NAME , L_NAME
FROM EMPLOYEES
WHERE ADDRESS LIKE '%Elgin,IL%';

Retrieve all employees who were born during the 1970â€™s.
SELECT F_NAME , L_NAME
FROM EMPLOYEES
WHERE B_DATE LIKE '197%';

Retrieve all employees in department 5 whose salary is between 60000 and 70000.
SELECT *
FROM EMPLOYEES
WHERE (SALARY BETWEEN 60000 AND 70000) AND DEP_ID = 5;

Exercise 2: Sorting

Retrieve a list of employees ordered by department ID.
SELECT F_NAME, L_NAME, DEP_ID 
FROM EMPLOYEES
ORDER BY DEP_ID;

Retrieve a list of employees ordered in descending order by department ID and within
    each department ordered alphabetically in descending order by last name.
SELECT F_NAME, L_NAME, DEP_ID 
FROM EMPLOYEES
ORDER BY DEP_ID DESC, L_NAME DESC;

In SQL problem 2 (Exercise 2 Problem 2), use department name instead of department ID.
   Retrieve a list of employees ordered by department name,and within each department ordered
   alphabetically in descending order by last name.
SELECT D.DEP_NAME , E.F_NAME, E.L_NAME
FROM EMPLOYEES as E, DEPARTMENTS as D
WHERE E.DEP_ID = D.DEPT_ID_DEP
ORDER BY D.DEP_NAME, E.L_NAME DESC;

Exercise 3: Grouping

For each department ID retrieve the number of employees in the department.
SELECT DEP_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY DEP_ID;

For each department retrieve the number of employees in the department, and the average employee salary in the department..
SELECT DEP_ID, COUNT(*), AVG(SALARY)
FROM EMPLOYEES
GROUP BY DEP_ID;

Label the computed columns in the result set of SQL problem 2 (Exercise 3 Problem 2) as NUM_EMPLOYEES and AVG_SALARY.
SELECT DEP_ID, COUNT(*) AS "NUM_EMPLOYEES", AVG(SALARY) AS "AVG_SALARY"
FROM EMPLOYEES
GROUP BY DEP_ID;

In SQL problem 3 (Exercise 3 Problem 3), order the result set by Average Salary..
SELECT DEP_ID, COUNT(*) AS "NUM_EMPLOYEES", AVG(SALARY) AS "AVG_SALARY"
FROM EMPLOYEES
GROUP BY DEP_ID
ORDER BY AVG_SALARY;
Copied!
Output
Problem:

In SQL problem 4 (Exercise 3 Problem 4), limit the result to departments with fewer than 4 employees.
SELECT DEP_ID, COUNT(*) AS "NUM_EMPLOYEES", AVG(SALARY) AS "AVG_SALARY"
FROM EMPLOYEES
GROUP BY DEP_ID
HAVING count(*) < 4
ORDER BY AVG_SALARY;

You can use the WHERE clause to refine your query results.
You can use the wildcard character (%) as a substitute for unknown characters in a pattern.
You can use BETWEEN ... AND ... to specify a range of numbers.
You can sort query results into ascending or descending order, using the ORDER BY clause to specify the column to sort on.
You can group query results by using the GROUP BY clause. 
